/****************************************************************************
 * rv_target_bfm_sim.sv
 *
 ****************************************************************************/
{% set tblink_generators = ({
       "rv_target_bfm_sv.sv" : "tblink.bfm_impl.sv",
       "rv_target_bfm_vl.sv" : "tblink.bfm_impl.vl"
   }) 
 %}

  
/**
 * Module: rv_target_bfm
 * 
 * TODO: Add module documentation
 */
module rv_target_bfm #(
		parameter WIDTH = 32
		) (
		input				clock,
		input				reset,
		input				t_valid,
		output				t_ready,
		input[WIDTH-1:0] 	t_dat
		);
	reg[WIDTH-1:0]		data_v = 0;
	reg[1:0]			data_valid_v = 0;
	
	initial begin
		if (WIDTH > 64) begin
			$display("Error: rv_data_out_bfm %m -- WIDTH>64 (%0d)", WIDTH);
			$finish();
		end
	end
	
	reg[WIDTH-1:0]		trace_data = 0;
	reg						trace_active = 0;
	reg[31:0]				trace_id = 0;

	/*	
	always @(posedge clock) begin
		if (reset) begin
			i_valid <= 0;
			i_dat <= 0;
		end else begin
			trace_active <= data_valid_v;
			
			if (data_valid_v > 0) begin
				trace_data <= data_v;
			end else begin
				trace_data <= {WIDTH{1'b0}};
			end
			if (i_valid && i_ready) begin
				data_valid_v = data_valid_v - 1;
				$display("rsp");
				rsp();
				
				i_valid <= (data_valid_v > 0);
				i_dat <= data_v;
			end else begin
				i_valid <= (data_valid_v > 0);
				i_dat <= data_v;
			end
		end
	end    
	 */
	
    task _rsp;
    begin
    	$display("rsp");
   	end
    endtask

// Note: Begin Generated Content. Do Not Edit
{{ tblink_gen(
        iftype="rv_bfms.target",
        is_mirror=false,
        kind="bfm") }}
// Note: End Generated Content.

endmodule


