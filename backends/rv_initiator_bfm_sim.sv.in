/****************************************************************************
 * rv_initiator_bfm_sim.sv
 *
 ****************************************************************************/
{% set tblink_generators = ({
       "rv_initiator_bfm_sim_sv.sv" : "tblink.bfm_impl.sv",
       "rv_initiator_bfm_sim_vl.sv" : "tblink.bfm_impl.vl"
   }) 
 %}

  
/**
 * Module: rv_initiator_bfm_sim
 * 
 * TODO: Add module documentation
 */
module rv_initiator_bfm_sim #(
		parameter WIDTH = 32
		) (
		input				clock,
		input				reset,
		output reg			i_valid,
		input				i_ready,
		output reg[WIDTH-1:0] i_dat
		);
	reg[WIDTH-1:0]		data_v[1:0];
	reg					data_v_put_i = 0;
	reg					data_v_get_i = 0;
	reg[1:0]			data_v_count = 0;

	initial begin
		if (WIDTH > 64) begin
			$display("Error: rv_data_out_bfm %m -- WIDTH>64 (%0d)", WIDTH);
			$finish();
		end
		data_v[0] = {WIDTH{1'b0}};
		data_v[1] = {WIDTH{1'b0}};
	end
	
	reg						in_reset = 0;
	
	always @(posedge clock) begin
		if (reset) begin
			i_valid <= 0;
			i_dat <= 0;
			in_reset <= 1;
		end else begin
			if (in_reset) begin
				in_reset <= 0;
				_reset();
			end
			
			if (i_valid && i_ready) begin
				data_v_count = data_v_count - 1;
				data_v_get_i += 1;
				
				$display("--> rsp");
				_rsp();
				$display("<-- rsp");

				if (data_v_count > 0) begin
					i_valid <= 1'b1;
					i_dat <= data_v[data_v_get_i];
				end else begin
					i_valid <= 1'b0;
					i_dat <= {WIDTH{1'b0}};
				end
			end else begin
				if (data_v_count > 0) begin
					i_valid <= 1'b1;
					i_dat <= data_v[data_v_get_i];
				end else begin
					i_valid <= 1'b0;
					i_dat <= {WIDTH{1'b0}};
				end
			end
		end
	end    
	
    task _req(input reg[63:0] data);
    begin
    	$display("req %0d", data);
    	data_v[data_v_put_i] = data;
    	data_v_put_i += 1;
    	data_v_count += 1;
    end
    endtask
    
    task _req2(input reg[63:0] data1, input reg[63:0] data2);
    begin
    	$display("req2 %0d %0d", data1, data2);
    	data_v[data_v_put_i] = data1;
    	data_v_put_i += 1;
    	data_v[data_v_put_i] = data2;
    	data_v_put_i += 1;
    	data_v_count += 2;
    end
    endtask

// Note: Begin Generated Content. Do Not Edit
{{ tblink_gen(
        iftype="rv_bfms.initiator",
        is_mirror=false,
        kind="bfm") }}
// Note: End Generated Content.

endmodule


